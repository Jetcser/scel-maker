//go:generate go test -run ^TestGen

package main

import (
	"bufio"
	"encoding/binary"
	"os"

	"golang.org/x/net/html/charset"
)

func gen() {
	f, err := os.Open("pinyin.bin")
	if err != nil {
		panic(err)
	}
	defer f.Close()

	// utf-16le
	utf16, _ := charset.Lookup("utf-16le")
	dec := utf16.NewDecoder()

	buf := bufio.NewReader(f)
	b := make([]byte, 4)
	buf.Read(b)
	length := binary.LittleEndian.Uint32(b)
	list := make([]string, length)
	for i := 0; i < int(length); i++ {
		idx := readUint16(buf)
		size := readUint16(buf)
		b = make([]byte, size)
		buf.Read(b)
		str, _ := dec.Bytes(b)
		list[idx] = string(str)
	}

	o, err := os.Create("pinyin_list.go")
	if err != nil {
		panic(err)
	}
	defer o.Close()
	wr := bufio.NewWriter(o)
	defer wr.Flush()

	wr.WriteString("// Code generated by gen_pinyin_list.go; DO NOT EDIT.\n")
	wr.WriteString("package main\n")
	wr.WriteString("\n")
	wr.WriteString("var list = []string{\n")
	for _, v := range list {
		wr.WriteString("\t\"" + v + "\",\n")
	}
	wr.WriteString("}\n")
}

func readUint16(buf *bufio.Reader) uint16 {
	b := make([]byte, 2)
	buf.Read(b)
	return binary.LittleEndian.Uint16(b)
}
